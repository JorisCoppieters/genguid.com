{
    "author": {
        "email": "joris.coppieters@gmail.com",
        "name": "Joris Coppieters",
        "url": "http://joriscoppieters.com"
    },
    "config": {
        "codecov": {
            "graphing_token": "IF8MNHN2OU",
            "upload_token": "117df317-1b7a-448d-a012-05c839cc5230"
        },
        "enquiries_mail_to": "",
        "ga_tracking_id": "UA-51523185-4",
        "host": "genguid.com",
        "keywords": "generate GUID",
        "port_idx": "4",
        "server_mail_from": "",
        "service_name": "",
        "slogan": "",
        "title": "",
        "description": "Generate GUIDs",
        "trello": {
            "board_id": "dkuCup3q"
        }
    },
    "dependencies": {
        "bluebird": "^3.7.2",
        "color-print": "^1.0.2",
        "uuid": "^9.0.0"
    },
    "description": "Generate GUIDs",
    "devDependencies": {
        "@types/bluebird": "^3.5.38",
        "@types/body-parser": "^1.19.2",
        "@types/compression": "^1.7.3",
        "@types/cors": "^2.8.14",
        "@types/express": "^4.17.17",
        "@types/jest": "^29.5.4",
        "@types/md5": "^2.3.2",
        "@types/multer": "^1.4.7",
        "@types/node": "^20.5.9",
        "@types/nodemailer": "^6.4.9",
        "@types/request": "^2.48.8",
        "@types/sequelize": "^4.28.15",
        "@types/socket.io": "^3.0.2",
        "@types/supertest": "^2.0.12",
        "@types/uuid": "^9.0.3",
        "@typescript-eslint/eslint-plugin": "^6.6.0",
        "@typescript-eslint/parser": "^6.6.0",
        "codecov": "^3.8.3",
        "depcheck": "^1.4.5",
        "eslint": "^8.48.0",
        "istanbul-merge": "^2.0.0",
        "jasmine-spec-reporter": "~7.0.0",
        "jest": "^29.6.2",
        "minimist": "^1.2.8",
        "npm-check": "^6.0.1",
        "npm-check-updates": "^16.13.2",
        "nyc": "^15.1.0",
        "prettier": "^3.0.3",
        "protractor": "~7.0.0",
        "toris-format": "^1.7.27",
        "ts-jest": "^29.1.1",
        "ts-unused-exports": "^10.0.1",
        "typescript": "^5.2.2",
        "vite": "^4.4.9"
    },
    "directories": {
        "build": "build",
        "src": "src"
    },
    "homepage": "https://genguid.com",
    "license": "LicenseRef-LICENSE",
    "name": "genguid.com",
    "private": true,
    "scripts": {
        "check:all": "npm run check:build && npm run check:unused-exports && npm run check:modules && npm run check:dependencies && npm run check:ts && npm run check:scss",
        "check:all:ci": "npm run check:build && npm run check:unused-exports && npm run check:ts && npm run check:scss",
        "check:build": "tsc --build ./tsconfig.check.json",
        "check:build:client": ":",
        "check:dependencies": "depcheck --ignore-patterns=*.scss",
        "check:modules": "npm-check",
        "check:performance": "bash ./tools/scripts/check-performance.sh",
        "check:scss": "bash ./tools/checks/check-scss.sh",
        "check:site": "bash ./tools/scripts/check-site.sh",
        "check:ts": "bash ./tools/checks/check-ts.sh",
        "check:unused-exports": "ts-unused-exports ./tsconfig.check.json",
        "check:update": "npm run check:modules && npm run check:dependencies",
        "ci": "bash ./tools/scripts/ci.sh dev false false",
        "ci:persist": "bash ./tools/scripts/ci.sh dev true false",
        "ci:persist:watch": "bash ./tools/scripts/ci.sh dev true true",
        "ci:watch": "bash ./tools/scripts/ci.sh dev false true",
        "config:files": "bash ./tools/scripts/config-files.sh",
        "coverage": "nyc report --reporter lcovonly -t coverage && nyc report --reporter html -t coverage && codecov --disable=gcov && nyc report --reporter text-summary -t coverage && nyc check-coverage -t coverage",
        "coverage:dev": "npm run test:core && npm run test:client && npm run coverage:html",
        "coverage:dev:open": "npm run coverage:dev && npm run coverage:html:open",
        "coverage:html": "nyc report --reporter lcovonly -t coverage && nyc report --reporter html -t coverage",
        "coverage:html:open": "bash ./tools/scripts/open-coverage-html.sh",
        "deploy": "bash ./tools/scripts/deploy.sh",
        "deploy:db": "bash ./tools/scripts/deploy-database.sh",
        "deploy:nocheck": "bash ./tools/scripts/deploy.sh",
        "format": "node ./tools/format/ci.js",
        "lint": "eslint -c .eslintrc.js --ext .ts ./src",
        "precoverage": "istanbul-merge --out ./coverage/coverage-final.json ./.coverage/core/coverage-final.json ./.coverage/site/coverage-final.json && nyc report -t coverage --reporter html",
        "precoverage:html": "istanbul-merge --out ./coverage/coverage-final.json ./.coverage/core/coverage-final.json ./.coverage/site/coverage-final.json && nyc report -t coverage --reporter html",
        "predeploy": "npm run test && npm run coverage",
        "preserve": "npm run config:files && npm run lint -- --fix && npm run format -- --fix",
        "pretest:e2e": "npm run update:webdriver",
        "pretest:e2e:ci": "npm run update:webdriver",
        "pretest:e2e:quick": "npm run update:webdriver",
        "rollback": "bash ./tools/scripts/rollback.sh",
        "rollback:db": "bash ./tools/scripts/rollback-database.sh",
        "serve": "bash ./tools/scripts/serve.sh dev",
        "serve:persist": "bash ./tools/scripts/serve.sh dev true",
        "test": "npm run test:e2e:quick && npm run test:client && npm run test:core",
        "test:client": ":",
        "test:client:watch": ":",
        "test:core": "jest --silent --maxWorkers=30%",
        "test:core:verbose": "jest --maxWorkers=30%",
        "test:e2e": "bash ./tools/scripts/e2e-tests.sh",
        "test:e2e:ci": "bash ./tools/scripts/e2e-tests.sh ci",
        "test:e2e:quick": "bash ./tools/scripts/e2e-tests.sh",
        "test:manual": "bash ./tools/scripts/manual-tests.sh",
        "test:scripts:dev": "bash ./tools/scripts/test-scripts-dev.sh",
        "update": "ncu -u && npm prune",
        "update:webdriver": "bash ./tools/scripts/update-webdriver.sh"
    },
    "version": "1.0.0"
}
